import os
import platform
import datetime
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from email.mime.base import MIMEBase
from email import encoders
from flask import Flask, render_template, request, jsonify, url_for
import pdfkit
import logging

app = Flask(__name__)

# Configura√ß√£o de logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# Configura√ß√£o do wkhtmltopdf baseada no sistema operacional
def get_wkhtmltopdf_config():
    """Detecta o sistema operacional e configura o wkhtmltopdf adequadamente"""
    system = platform.system().lower()
    
    if system == 'windows':
        # Caminhos comuns do wkhtmltopdf no Windows
        possible_paths = [
            r'C:\Program Files\wkhtmltopdf\bin\wkhtmltopdf.exe',
            r'C:\Program Files (x86)\wkhtmltopdf\bin\wkhtmltopdf.exe',
            r'wkhtmltopdf.exe'  # Se estiver no PATH
        ]
        
        for path in possible_paths:
            if os.path.exists(path):
                return pdfkit.configuration(wkhtmltopdf=path)
        
        # Se n√£o encontrar, retorna None (usar√° configura√ß√£o padr√£o)
        logger.warning("wkhtmltopdf n√£o encontrado. Instale de: https://wkhtmltopdf.org/downloads.html")
        return None
        
    elif system == 'linux':
        # Configura√ß√£o para Linux
        linux_paths = ['/usr/bin/wkhtmltopdf', '/usr/local/bin/wkhtmltopdf']
        for path in linux_paths:
            if os.path.exists(path):
                return pdfkit.configuration(wkhtmltopdf=path)
        return None
        
    elif system == 'darwin':  # macOS
        mac_paths = ['/usr/local/bin/wkhtmltopdf', '/opt/homebrew/bin/wkhtmltopdf']
        for path in mac_paths:
            if os.path.exists(path):
                return pdfkit.configuration(wkhtmltopdf=path)
        return None
    
    return None

# Configurar wkhtmltopdf
config = get_wkhtmltopdf_config()

# Configura√ß√µes de email - CONFIGURA√á√ÉO DIRETA PARA FUNCIONAMENTO IMEDIATO
# Para usar suas pr√≥prias credenciais, altere os valores abaixo:

# Configura√ß√µes padr√£o para Zoho Mail
DEFAULT_EMAIL_HOST = 'smtp.zoho.com'
DEFAULT_EMAIL_PORT = 587
DEFAULT_EMAIL_USER = 'consultoria@openmanagement.com.br'  # ALTERE AQUI para seu e-mail
DEFAULT_EMAIL_PASS = 'sua_senha_de_app_aqui'  # ALTERE AQUI para sua senha de app do Zoho

# Op√ß√£o 2: Gmail (Alternativa)
# DEFAULT_EMAIL_HOST = 'smtp.gmail.com'
# DEFAULT_EMAIL_PORT = 587
# DEFAULT_EMAIL_USER = 'seu_email@gmail.com'
# DEFAULT_EMAIL_PASS = 'sua_senha_de_app'

# Op√ß√£o 3: Outlook/Hotmail
# DEFAULT_EMAIL_HOST = 'smtp-mail.outlook.com'
# DEFAULT_EMAIL_PORT = 587
# DEFAULT_EMAIL_USER = 'seu_email@outlook.com'
# DEFAULT_EMAIL_PASS = 'sua_senha'

# IMPORTANTE: Para Zoho Mail, voc√™ precisa:
# 1. Ativar autentica√ß√£o de 2 fatores na conta Zoho
# 2. Gerar uma senha de app espec√≠fica para SMTP
# 3. Usar essa senha de app no campo DEFAULT_EMAIL_PASS (n√£o a senha normal)

# Configura√ß√£o final (vari√°veis de ambiente sobrescrevem as configura√ß√µes padr√£o)
EMAIL_HOST = os.getenv('EMAIL_HOST', DEFAULT_EMAIL_HOST)
EMAIL_PORT = int(os.getenv('EMAIL_PORT', str(DEFAULT_EMAIL_PORT)))
EMAIL_USER = os.getenv('EMAIL_USER', DEFAULT_EMAIL_USER)
EMAIL_PASS = os.getenv('EMAIL_PASS', DEFAULT_EMAIL_PASS)

# Verificar se e-mail est√° configurado
EMAIL_ENABLED = bool(EMAIL_PASS and EMAIL_USER and EMAIL_PASS != 'sua_senha_de_app_aqui')

print(f"üîß Configura√ß√£o de E-mail:")
print(f"   Host: {EMAIL_HOST}")
print(f"   Porta: {EMAIL_PORT}")
print(f"   Usu√°rio: {EMAIL_USER}")
print(f"   Senha configurada: {'‚úÖ Sim' if EMAIL_PASS and EMAIL_PASS != 'sua_senha_de_app_aqui' else '‚ùå N√£o'}")
print(f"   E-mail habilitado: {'‚úÖ Sim' if EMAIL_ENABLED else '‚ùå N√£o'}")
if not EMAIL_ENABLED:
    print("   ‚ö†Ô∏è  Para habilitar e-mail, configure EMAIL_USER e EMAIL_PASS no c√≥digo ou via vari√°veis de ambiente")

def calcular_competencias(respostas):
    """Calcula as m√©dias das compet√™ncias baseado nas respostas da escala Likert"""
    competencias = {
        'comunicacao': [],
        'organizacao': [],
        'proatividade': [],
        'pensamento_critico': [],
        'produtividade': []
    }
    
    # Mapear respostas para compet√™ncias
    for key, value in respostas.items():
        try:
            valor = int(value)
            if key.startswith('c1_'):  # Comunica√ß√£o
                competencias['comunicacao'].append(valor)
            elif key.startswith('c2_'):  # Organiza√ß√£o
                competencias['organizacao'].append(valor)
            elif key.startswith('c3_'):  # Proatividade
                competencias['proatividade'].append(valor)
            elif key.startswith('c4_'):  # Pensamento Cr√≠tico
                competencias['pensamento_critico'].append(valor)
            elif key.startswith('c5_'):  # Produtividade
                competencias['produtividade'].append(valor)
        except (ValueError, TypeError):
            logger.warning(f"Valor inv√°lido para {key}: {value}")
            continue
    
    # Calcular m√©dias
    medias = {}
    for comp, valores in competencias.items():
        if valores:
            medias[comp] = sum(valores) / len(valores)
        else:
            medias[comp] = 0
    
    return medias

def gerar_ranking(medias):
    """Gera ranking das compet√™ncias"""
    competencias_info = [
        {'nome': 'Comunica√ß√£o', 'emoji': 'üü†', 'media': medias['comunicacao']},
        {'nome': 'Organiza√ß√£o', 'emoji': 'üü°', 'media': medias['organizacao']},
        {'nome': 'Proatividade', 'emoji': 'üîµ', 'media': medias['proatividade']},
        {'nome': 'Pensamento Cr√≠tico', 'emoji': 'üü£', 'media': medias['pensamento_critico']},
        {'nome': 'Produtividade', 'emoji': 'üü¢', 'media': medias['produtividade']}
    ]
    
    # Ordenar por m√©dia (decrescente)
    competencias_ordenadas = sorted(competencias_info, key=lambda x: x['media'], reverse=True)
    
    return {
        'mais_fortes': competencias_ordenadas[:3],
        'mais_fracas': competencias_ordenadas[-3:][::-1]  # Inverter para mostrar da menor para maior
    }

def gerar_plano_desenvolvimento(medias, ranking):
    """Gera plano de desenvolvimento personalizado baseado nas compet√™ncias mais fracas"""
    
    # Base de a√ß√µes por compet√™ncia e n√≠vel (baseado no documento anexado)
    acoes_desenvolvimento = {
        'comunicacao': {
            'grau_1': [
                {
                    'acao': 'Praticar Escuta Ativa diariamente',
                    'o_que_e': 'Trata-se de ouvir com total aten√ß√£o, sem interromper a pessoa que est√° falando, e depois resumir o que foi dito para confirmar que voc√™ entendeu corretamente.',
                    'por_que': 'Esta pr√°tica cria conex√µes genu√≠nas com as pessoas e evita mal-entendidos que podem prejudicar relacionamentos pessoais e profissionais. Quando as pessoas se sentem realmente ouvidas, a confian√ßa aumenta.',
                    'como': 'Passo a passo: 1) Escolha uma conversa por dia para praticar; 2) Durante essa conversa, foque 100% na pessoa (guarde o celular); 3) N√£o interrompa, apenas fa√ßa perguntas para entender melhor; 4) Ao final, diga "Deixa eu ver se entendi..." e resuma o que a pessoa disse; 5) Pergunte se seu resumo est√° correto.',
                    'meta': 'Realizar 60 conversas com escuta ativa completa (aproximadamente 2 por semana durante 3 meses)'
                },
                {
                    'acao': 'Fazer Perguntas Poderosas',
                    'o_que_e': 'S√£o quest√µes abertas (que n√£o podem ser respondidas com sim/n√£o) formuladas para estimular reflex√£o profunda e revelar informa√ß√µes importantes que normalmente ficariam ocultas.',
                    'por_que': 'Perguntas poderosas ampliam sua perspectiva e a dos outros, evitando que voc√™ fa√ßa suposi√ß√µes incorretas. Elas transformam conversas superficiais em di√°logos significativos e reveladores.',
                    'como': 'Passo a passo: 1) Substitua afirma√ß√µes por perguntas que come√ßam com "como" ou "o qu√™"; 2) Em vez de "Isso n√£o vai funcionar", pergunte "Como podemos fazer isso funcionar?"; 3) Em vez de "Voc√™ est√° errado", pergunte "O que te faz pensar assim?"; 4) Anote as rea√ß√µes e insights gerados por essas perguntas.',
                    'meta': 'Fazer pelo menos 3 perguntas poderosas por dia, totalizando mais de 270 perguntas transformadoras em 90 dias'
                }
            ],
            'grau_2': [
                {
                    'acao': 'Mapear Estilos de Comunica√ß√£o',
                    'o_que_e': '√â o processo de identificar e categorizar como diferentes pessoas preferem receber e transmitir informa√ß√µes, reconhecendo padr√µes como direto, anal√≠tico, amig√°vel ou expressivo.',
                    'por_que': 'Adaptar sua abordagem comunicativa a diferentes perfis aumenta drasticamente sua efic√°cia. O que funciona com uma pessoa pode alienar completamente outra. Este mapeamento permite personalizar sua comunica√ß√£o.',
                    'como': 'Passo a passo: 1) Observe como as pessoas respondem a diferentes tipos de mensagens; 2) Classifique-as em: Direto (prefere brevidade e fatos), Anal√≠tico (prefere detalhes e l√≥gica), Amig√°vel (valoriza conex√£o pessoal), Expressivo (aprecia entusiasmo e vis√£o geral); 3) Adapte sua comunica√ß√£o ao estilo preferido de cada pessoa; 4) Mantenha um registro das suas observa√ß√µes e ajustes.',
                    'meta': 'Mapear completamente os estilos de comunica√ß√£o de pelo menos 10 pessoas importantes em sua vida pessoal e profissional'
                }
            ],
            'grau_3': [
                {
                    'acao': 'Criar Ritual de Comunica√ß√£o Semanal',
                    'o_que_e': '√â um momento fixo e recorrente dedicado exclusivamente para alinhar expectativas, compartilhar informa√ß√µes importantes e fortalecer conex√µes com pessoas-chave em sua vida pessoal ou profissional.',
                    'por_que': 'Previne conflitos causados por falta de comunica√ß√£o e mant√©m conex√µes fortes mesmo em per√≠odos ocupados. Rituais criam previsibilidade e seguran√ßa nos relacionamentos.',
                    'como': 'Passo a passo: 1) Escolha um dia e hor√°rio fixo semanal (ex: domingo √†s 19h ou sexta √†s 16h); 2) Reserve 30 minutos ininterruptos; 3) Estruture o encontro em: a) Revis√£o da semana passada, b) Celebra√ß√£o de conquistas, c) Discuss√£o de desafios, d) Alinhamento para pr√≥xima semana; 4) Mantenha o compromisso mesmo quando parecer desnecess√°rio.',
                    'meta': 'Realizar 13 rituais semanais consecutivos (um ciclo completo de 3 meses) sem falhas'
                }
            ]
        },
        'organizacao': {
            'grau_1': [
                {
                    'acao': 'Criar Sistema de Captura',
                    'o_que_e': '√â um m√©todo √∫nico e confi√°vel para registrar todos os seus compromissos, ideias, tarefas e informa√ß√µes importantes assim que surgem, evitando que fiquem apenas na sua mem√≥ria.',
                    'por_que': 'Libera sua mente da carga cognitiva de tentar lembrar de tudo, reduzindo estresse e esquecimentos. Um sistema externo confi√°vel permite que seu c√©rebro foque em pensar e criar, n√£o em armazenar informa√ß√µes.',
                    'como': 'Passo a passo: 1) Escolha uma ferramenta que esteja sempre com voc√™ (aplicativo no celular como Evernote/Google Keep ou um caderno pequeno); 2) Desenvolva o h√°bito de registrar IMEDIATAMENTE qualquer compromisso, ideia ou tarefa que surgir; 3) Estabele√ßa um hor√°rio di√°rio fixo (5-10 minutos) para revisar e organizar o que foi capturado; 4) Transfira os itens para os sistemas apropriados (calend√°rio, lista de tarefas, etc.).',
                    'meta': 'Capturar 100% dos compromissos e tarefas em seu sistema externo por 90 dias consecutivos'
                },
                {
                    'acao': 'Implementar Regra dos 2 Minutos',
                    'o_que_e': '√â um princ√≠pio simples: se uma tarefa pode ser conclu√≠da em 2 minutos ou menos, fa√ßa-a imediatamente em vez de adi√°-la ou registr√°-la para depois.',
                    'por_que': 'Evita o ac√∫mulo de pequenas pend√™ncias que, juntas, criam uma sensa√ß√£o de sobrecarga. Tarefas pequenas adiadas frequentemente consomem mais energia mental do que realiz√°-las de imediato.',
                    'como': 'Passo a passo: 1) Quando uma nova tarefa surgir, pergunte-se: "Posso fazer isso em 2 minutos ou menos?"; 2) Se sim, fa√ßa imediatamente, sem exce√ß√µes; 3) Exemplos: responder um email simples, guardar um item fora do lugar, fazer uma liga√ß√£o r√°pida; 4) Mantenha um contador di√°rio de quantas vezes voc√™ aplicou a regra.',
                    'meta': 'Atingir 80% de ader√™ncia √† regra dos 2 minutos (medido atrav√©s de auto-monitoramento di√°rio) durante os 90 dias'
                }
            ],
            'grau_2': [
                {
                    'acao': 'Implementar Revis√£o Semanal',
                    'o_que_e': '√â uma pr√°tica estruturada de dedicar 1 hora por semana para organizar a pr√≥xima semana, revisar pend√™ncias e ajustar seus sistemas e projetos.',
                    'por_que': 'Mant√©m seu sistema de organiza√ß√£o confi√°vel e atualizado, evitando que tarefas importantes caiam no esquecimento. A revis√£o semanal proporciona clareza mental e sensa√ß√£o de controle sobre sua vida.',
                    'como': 'Passo a passo: 1) Escolha um momento fixo semanal (muitos preferem sexta √† tarde ou domingo √† noite); 2) Siga uma checklist: a) Revisar conquistas da semana, b) Processar caixa de entrada e anota√ß√µes, c) Atualizar listas de tarefas, d) Revisar calend√°rio das pr√≥ximas semanas, e) Atualizar status de projetos, f) Definir prioridades para a pr√≥xima semana; 3) Documente insights e ajustes necess√°rios.',
                    'meta': 'Completar 13 revis√µes semanais completas (um ciclo de 3 meses) sem pular nenhuma semana'
                }
            ],
            'grau_3': [
                {
                    'acao': 'Criar Sistema de Projetos',
                    'o_que_e': '√â um m√©todo estruturado para planejar e executar iniciativas complexas que envolvem m√∫ltiplas etapas, transformando ideias abstratas em resultados concretos atrav√©s de planejamento detalhado.',
                    'por_que': 'Transforma ideias e objetivos ambiciosos em resultados concretos atrav√©s de passos gerenci√°veis. Um sistema de projetos evita que iniciativas importantes fiquem estagnadas por parecerem muito complexas.',
                    'como': 'Passo a passo: 1) Crie um template com os seguintes elementos: a) Objetivo claro e mensur√°vel, b) Lista de etapas sequenciais, c) Recursos necess√°rios, d) Prazos para cada etapa, e) Crit√©rios de sucesso; 2) Aplique este template a 3 projetos importantes; 3) Divida cada projeto em tarefas de no m√°ximo 1-2 horas; 4) Estabele√ßa revis√µes semanais de progresso; 5) Documente aprendizados durante a execu√ß√£o.',
                    'meta': 'Concluir com sucesso 3 projetos significativos utilizando o sistema criado, com resultados mensur√°veis'
                }
            ]
        },
        'proatividade': {
            'grau_1': [
                {
                    'acao': 'Implementar Regra 5/25',
                    'o_que_e': '√â uma pr√°tica de gerenciamento de tempo que consiste em chegar 5 minutos antes e terminar 25 minutos antes do prazo em todos os compromissos e entregas.',
                    'por_que': 'Elimina atrasos cr√¥nicos e cria uma margem de seguran√ßa para imprevistos, reduzindo significativamente o estresse. Ser consistentemente pontual constr√≥i uma reputa√ß√£o de confiabilidade.',
                    'como': 'Passo a passo: 1) Configure todos os seus alarmes e lembretes 5 minutos antes do hor√°rio real; 2) Ao planejar quanto tempo uma tarefa levar√°, adicione 25% de tempo extra; 3) Ao agendar compromissos no calend√°rio, bloqueie 25 minutos ap√≥s o hor√°rio previsto de t√©rmino; 4) Mantenha um registro de pontualidade para monitorar seu progresso; 5) Utilize o tempo extra quando tudo corre bem para revisar, preparar a pr√≥xima atividade ou simplesmente respirar.',
                    'meta': 'Aplicar a regra 5/25 em pelo menos 90% de todos os seus compromissos durante os 3 meses'
                }
            ],
            'grau_2': [
                {
                    'acao': 'Criar Gatilho Se-Ent√£o',
                    'o_que_e': 'S√£o planos de a√ß√£o autom√°ticos pr√©-definidos para situa√ß√µes espec√≠ficas, eliminando a necessidade de tomar decis√µes no momento e garantindo respostas consistentes.',
                    'por_que': 'Remove a hesita√ß√£o e garante que voc√™ responda de forma adequada mesmo em situa√ß√µes desafiadoras ou inesperadas.',
                    'como': 'Passo a passo: 1) Identifique situa√ß√µes recorrentes onde voc√™ hesita ou reage mal; 2) Crie planos "Se X acontecer, ent√£o eu farei Y"; 3) Exemplos: "Se algu√©m me criticar, ent√£o eu vou respirar fundo e perguntar por detalhes espec√≠ficos"; 4) Pratique mentalmente esses cen√°rios; 5) Revise e ajuste os gatilhos baseado nos resultados.',
                    'meta': 'Criar e implementar 10 gatilhos Se-Ent√£o para situa√ß√µes importantes da sua vida'
                }
            ],
            'grau_3': [
                {
                    'acao': 'Desenvolver Vis√£o Antecipada',
                    'o_que_e': '√â a capacidade de identificar tend√™ncias, oportunidades e problemas potenciais antes que se manifestem completamente, permitindo prepara√ß√£o e a√ß√£o preventiva.',
                    'por_que': 'Permite que voc√™ se posicione estrategicamente, evite crises e aproveite oportunidades antes dos outros.',
                    'como': 'Passo a passo: 1) Dedique 30 minutos semanais para analisar tend√™ncias em sua √°rea; 2) Identifique 3 cen√°rios futuros poss√≠veis para projetos importantes; 3) Crie planos de conting√™ncia para riscos identificados; 4) Monitore indicadores-chave que sinalizam mudan√ßas; 5) Documente suas previs√µes e avalie a precis√£o.',
                    'meta': 'Antecipar e se preparar para 5 situa√ß√µes futuras importantes, demonstrando vis√£o estrat√©gica'
                }
            ]
        },
        'pensamento_critico': {
            'grau_1': [
                {
                    'acao': 'Questionar Padr√µes Autom√°ticos',
                    'o_que_e': '√â o h√°bito consciente de pausar e examinar seus pensamentos, rea√ß√µes e suposi√ß√µes autom√°ticas antes de agir ou formar conclus√µes.',
                    'por_que': 'Evita decis√µes impulsivas e baseadas em vieses, melhorando a qualidade do seu racioc√≠nio e resultados.',
                    'como': 'Passo a passo: 1) Identifique momentos onde voc√™ reage automaticamente; 2) Implemente uma pausa de 10 segundos antes de responder; 3) Pergunte-se: "Por que penso assim?", "Que evid√™ncias tenho?", "Que outras perspectivas existem?"; 4) Documente situa√ß√µes onde o questionamento mudou sua perspectiva.',
                    'meta': 'Questionar e revisar pelo menos 30 rea√ß√µes autom√°ticas durante os 90 dias'
                }
            ],
            'grau_2': [
                {
                    'acao': 'Buscar Evid√™ncias e Dados',
                    'o_que_e': '√â a pr√°tica sistem√°tica de procurar informa√ß√µes concretas e verific√°veis antes de aceitar afirma√ß√µes ou tomar decis√µes importantes.',
                    'por_que': 'Melhora a qualidade das decis√µes e reduz erros baseados em suposi√ß√µes ou informa√ß√µes incorretas.',
                    'como': 'Passo a passo: 1) Para cada decis√£o importante, liste 3 fontes de informa√ß√£o necess√°rias; 2) Procure dados quantitativos quando poss√≠vel; 3) Verifique a credibilidade das fontes; 4) Compare informa√ß√µes de m√∫ltiplas perspectivas; 5) Documente as evid√™ncias encontradas.',
                    'meta': 'Basear 100% das decis√µes importantes em evid√™ncias verific√°veis durante os 3 meses'
                }
            ],
            'grau_3': [
                {
                    'acao': 'Considerar M√∫ltiplas Perspectivas',
                    'o_que_e': '√â a habilidade de examinar situa√ß√µes e problemas atrav√©s de diferentes pontos de vista, incluindo perspectivas que podem contradizer sua vis√£o inicial.',
                    'por_que': 'Amplia sua compreens√£o, reduz pontos cegos e leva a solu√ß√µes mais robustas e criativas.',
                    'como': 'Passo a passo: 1) Para cada decis√£o importante, identifique pelo menos 3 stakeholders afetados; 2) Imagine como cada um veria a situa√ß√£o; 3) Procure ativamente opini√µes contr√°rias √† sua; 4) Use t√©cnicas como "advogado do diabo"; 5) Sintetize insights de diferentes perspectivas.',
                    'meta': 'Aplicar an√°lise multi-perspectiva em 10 decis√µes importantes e documentar insights obtidos'
                }
            ]
        },
        'produtividade': {
            'grau_1': [
                {
                    'acao': 'Concentrar-se em Uma Tarefa',
                    'o_que_e': '√â a pr√°tica de dedicar aten√ß√£o completa a uma √∫nica atividade por vez, evitando multitarefas e distra√ß√µes.',
                    'por_que': 'Aumenta a qualidade do trabalho, reduz erros e melhora a efici√™ncia, j√° que o c√©rebro funciona melhor com foco √∫nico.',
                    'como': 'Passo a passo: 1) Escolha uma tarefa importante; 2) Elimine todas as distra√ß√µes (celular, notifica√ß√µes, etc.); 3) Defina um tempo espec√≠fico para a tarefa; 4) Trabalhe apenas nela at√© completar ou at√© o tempo acabar; 5) Fa√ßa uma pausa antes da pr√≥xima tarefa.',
                    'meta': 'Praticar foco √∫nico em pelo menos 2 horas de trabalho por dia durante 90 dias'
                },
                {
                    'acao': 'Utilizar T√©cnica Pomodoro',
                    'o_que_e': '√â um m√©todo de gerenciamento de tempo que divide o trabalho em intervalos de 25 minutos (pomodoros) seguidos de pausas curtas.',
                    'por_que': 'Mant√©m a concentra√ß√£o, previne fadiga mental e torna tarefas grandes mais gerenci√°veis.',
                    'como': 'Passo a passo: 1) Escolha uma tarefa; 2) Configure timer para 25 minutos; 3) Trabalhe com foco total at√© o timer tocar; 4) Fa√ßa pausa de 5 minutos; 5) Ap√≥s 4 pomodoros, fa√ßa pausa longa de 15-30 minutos.',
                    'meta': 'Completar pelo menos 6 pomodoros por dia de trabalho durante os 90 dias'
                }
            ],
            'grau_2': [
                {
                    'acao': 'Priorizar Tarefas de Alto Impacto',
                    'o_que_e': '√â a habilidade de identificar e focar nas atividades que geram os maiores resultados em rela√ß√£o ao tempo e energia investidos.',
                    'por_que': 'Maximiza o retorno do seu esfor√ßo e garante que voc√™ trabalhe no que realmente importa para seus objetivos.',
                    'como': 'Passo a passo: 1) Liste todas as suas tarefas; 2) Avalie cada uma em termos de impacto (alto/m√©dio/baixo); 3) Identifique as 20% de tarefas que geram 80% dos resultados; 4) Dedique pelo menos 60% do seu tempo a essas tarefas de alto impacto; 5) Elimine ou delegue tarefas de baixo impacto.',
                    'meta': 'Aumentar tempo dedicado a atividades de alto impacto para 70% da agenda de trabalho'
                }
            ],
            'grau_3': [
                {
                    'acao': 'Otimizar Processos Continuamente',
                    'o_que_e': '√â a pr√°tica sistem√°tica de analisar, melhorar e automatizar processos recorrentes para aumentar efici√™ncia e qualidade.',
                    'por_que': 'Libera tempo para atividades mais estrat√©gicas e reduz erros em tarefas repetitivas.',
                    'como': 'Passo a passo: 1) Identifique 5 processos que voc√™ executa regularmente; 2) Documente cada passo atual; 3) Identifique gargalos e desperd√≠cios; 4) Implemente melhorias (automa√ß√£o, elimina√ß√£o de passos, etc.); 5) Me√ßa resultados e continue otimizando.',
                    'meta': 'Otimizar 5 processos importantes, reduzindo tempo de execu√ß√£o em pelo menos 30%'
                }
            ]
        }
    }
    
    plano = []
    competencias_foco = ranking['mais_fracas'][:3]  # Focar nas 3 mais fracas
    
    for comp_info in competencias_foco:
        comp_nome = comp_info['nome'].lower().replace(' ', '_').replace('√™', 'e').replace('√≠', 'i')
        if comp_nome == 'pensamento_critico':
            comp_nome = 'pensamento_critico'
        elif comp_nome == 'comunicacao':
            comp_nome = 'comunicacao'
        elif comp_nome == 'organizacao':
            comp_nome = 'organizacao'
        elif comp_nome == 'proatividade':
            comp_nome = 'proatividade'
        elif comp_nome == 'produtividade':
            comp_nome = 'produtividade'
        
        media = comp_info['media']
        
        # Determinar grau baseado na m√©dia da escala Likert (1-5)
        if media <= 1:
            grau = 'grau_1'
        elif media <= 2:
            grau = 'grau_2'
        else:
            grau = 'grau_3'
        
        if comp_nome in acoes_desenvolvimento and grau in acoes_desenvolvimento[comp_nome]:
            acoes = acoes_desenvolvimento[comp_nome][grau]
            
            plano.append({
                'competencia': comp_info['nome'],
                'emoji': comp_info['emoji'],
                'media': media,
                'acoes': acoes
            })
    
    return plano

def gerar_introducao_plano(medias, ranking):
    """Gera introdu√ß√£o personalizada para o plano de desenvolvimento"""
    pontuacao_geral = sum(medias.values()) / len(medias)
    mais_forte = ranking['mais_fortes'][0]['nome']
    mais_fraca = ranking['mais_fracas'][0]['nome']
    
    if pontuacao_geral >= 4.0:
        intro = f"Parab√©ns! Voc√™ demonstra um excelente n√≠vel de desenvolvimento nas compet√™ncias avaliadas. Sua maior for√ßa est√° em {mais_forte}, que pode servir como base para alavancar outras √°reas. "
    elif pontuacao_geral >= 3.0:
        intro = f"Voc√™ est√° no caminho certo! Possui uma base s√≥lida, especialmente em {mais_forte}. "
    else:
        intro = f"Este √© um momento excelente para come√ßar sua jornada de desenvolvimento! Voc√™ tem grande potencial de crescimento. "
    
    intro += f"O plano a seguir foca nas compet√™ncias com maior oportunidade de impacto: priorizamos {mais_fraca} como √°rea principal de desenvolvimento, pois melhorias aqui ter√£o efeito multiplicador em outras √°reas da sua vida."
    
    return intro

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/submit_avaliacao', methods=['POST'])
def submit_avaliacao():
    try:
        data = request.get_json()
        nome_completo = data.get('nome_completo', '')
        email = data.get('email', '')
        celular = data.get('celular', '')
        respostas = data.get('respostas', {})
        
        if not nome_completo or not email or not celular or not respostas:
            return jsonify({'error': 'Dados incompletos'}), 400
        
        # Calcular compet√™ncias
        medias = calcular_competencias(respostas)
        pontuacao_geral = sum(medias.values()) / len(medias)
        
        # Gerar ranking
        ranking = gerar_ranking(medias)
        
        # Gerar plano de desenvolvimento
        plano_desenvolvimento = gerar_plano_desenvolvimento(medias, ranking)
        
        # Gerar introdu√ß√£o personalizada
        introducao_plano = gerar_introducao_plano(medias, ranking)
        
        # Preparar dados para o template
        todas_competencias = [
            {'nome': 'Comunica√ß√£o', 'emoji': 'üü†', 'media': medias['comunicacao']},
            {'nome': 'Organiza√ß√£o', 'emoji': 'üü°', 'media': medias['organizacao']},
            {'nome': 'Proatividade', 'emoji': 'üîµ', 'media': medias['proatividade']},
            {'nome': 'Pensamento Cr√≠tico', 'emoji': 'üü£', 'media': medias['pensamento_critico']},
            {'nome': 'Produtividade', 'emoji': 'üü¢', 'media': medias['produtividade']}
        ]
        
        # Gerar relat√≥rio HTML
        logo_path = url_for('static', filename='img/logo.png', _external=True)
        
        html_content = render_template('relatorio_template.html',
            nome_completo=nome_completo,
            email=email,
            celular=celular,
            data_avaliacao=datetime.datetime.now().strftime('%d/%m/%Y'),
            pontuacao_geral=round(pontuacao_geral, 2),
            todas_competencias=todas_competencias,
            ranking=ranking,
            plano_desenvolvimento=plano_desenvolvimento,
            introducao_plano=introducao_plano,
            logo_path=logo_path
        )
        
        # Tentar gerar PDF se wkhtmltopdf estiver dispon√≠vel
        pdf_path = None
        try:
            if config is not None:
                # Gerar PDF
                options = {
                    'page-size': 'A4',
                    'margin-top': '0.75in',
                    'margin-right': '0.75in',
                    'margin-bottom': '0.75in',
                    'margin-left': '0.75in',
                    'encoding': "UTF-8",
                    'no-outline': None,
                    'enable-local-file-access': None
                }
                
                # Criar diret√≥rio tempor√°rio se n√£o existir
                temp_dir = os.path.join(os.getcwd(), 'relatorios_temp')
                os.makedirs(temp_dir, exist_ok=True)
                
                # Nome do arquivo PDF
                timestamp = datetime.datetime.now().strftime('%Y%m%d_%H%M%S')
                pdf_filename = f'relatorio_competencias_{timestamp}.pdf'
                pdf_path = os.path.join(temp_dir, pdf_filename)
                
                # Gerar PDF
                pdfkit.from_string(html_content, pdf_path, options=options, configuration=config)
                logger.info(f"PDF gerado com sucesso: {pdf_path}")
            else:
                logger.warning("wkhtmltopdf n√£o dispon√≠vel. PDF n√£o ser√° gerado.")
                
        except Exception as e:
            logger.error(f"Erro ao gerar PDF: {str(e)}")
            pdf_path = None
        
        # Enviar por email (se PDF foi gerado e email estiver configurado)
        print(f"üîç Verificando envio de e-mail:")
        print(f"   PDF gerado: {'‚úÖ Sim' if pdf_path and os.path.exists(pdf_path) else '‚ùå N√£o'}")
        print(f"   E-mail habilitado: {'‚úÖ Sim' if EMAIL_ENABLED else '‚ùå N√£o'}")
        
        if pdf_path and os.path.exists(pdf_path) and EMAIL_ENABLED:
            print(f"üìß Tentando enviar e-mail...")
            try:
                enviar_email(nome_completo, email, pdf_path, pontuacao_geral)
                # Limpar arquivo tempor√°rio ap√≥s envio
                os.remove(pdf_path)
                mensagem = f'Relat√≥rio gerado e enviado para {email}!'
                print(f"‚úÖ E-mail enviado com sucesso!")
            except Exception as e:
                logger.error(f"Erro ao enviar email: {str(e)}")
                mensagem = f'Relat√≥rio gerado com sucesso! (Email n√£o enviado - erro: {str(e)})'
                print(f"‚ùå Erro ao enviar e-mail: {str(e)}")
        elif pdf_path and os.path.exists(pdf_path):
            print(f"‚ö†Ô∏è  E-mail n√£o configurado - PDF gerado mas n√£o enviado")
            mensagem = f'Relat√≥rio gerado com sucesso! (Email n√£o configurado - configure EMAIL_USER e EMAIL_PASS)'
        else:
            print(f"‚ö†Ô∏è  PDF n√£o foi gerado")
            mensagem = f'Avalia√ß√£o processada com sucesso! Pontua√ß√£o: {round(pontuacao_geral, 2)}/5.00'
        
        return jsonify({
            'message': mensagem,
            'pontuacao_geral': round(pontuacao_geral, 2),
            'html_content': html_content  # Retornar HTML para visualiza√ß√£o
        })
        
    except Exception as e:
        logger.error(f"Erro ao processar avalia√ß√£o: {str(e)}")
        return jsonify({'error': f'Erro interno do servidor: {str(e)}'}), 500

def enviar_email(nome, email_destino, pdf_path, pontuacao_geral):
    """Envia o relat√≥rio por email com logs detalhados"""
    print(f"üìß Iniciando envio de e-mail...")
    print(f"   Destinat√°rio: {email_destino}")
    print(f"   PDF: {pdf_path}")
    print(f"   Configura√ß√£o: {EMAIL_HOST}:{EMAIL_PORT}")
    
    try:
        # Verificar se arquivo PDF existe
        if not os.path.exists(pdf_path):
            raise FileNotFoundError(f"Arquivo PDF n√£o encontrado: {pdf_path}")
        
        print(f"   ‚úÖ PDF encontrado: {os.path.getsize(pdf_path)} bytes")
        
        # Criar mensagem
        msg = MIMEMultipart()
        msg['From'] = EMAIL_USER
        msg['To'] = email_destino
        msg['Subject'] = f'Seu Relat√≥rio de Autoavalia√ß√£o de Compet√™ncias - Nota: {pontuacao_geral:.2f}/5.00'
        
        print(f"   ‚úÖ Mensagem criada")
        
        # Corpo do email
        corpo = f"""
Ol√° {nome}!

Parab√©ns por completar sua autoavalia√ß√£o de compet√™ncias! üéâ

Sua pontua√ß√£o geral foi: {pontuacao_geral:.2f}/5.00

Em anexo voc√™ encontrar√° seu relat√≥rio personalizado com:
‚úÖ An√°lise detalhada de suas compet√™ncias
‚úÖ Gr√°ficos visuais dos resultados
‚úÖ Ranking de pontos fortes e oportunidades
‚úÖ Plano de desenvolvimento personalizado com a√ß√µes pr√°ticas
‚úÖ Refer√™ncias para continuar evoluindo

Este relat√≥rio foi desenvolvido especialmente para voc√™ com base em suas respostas na escala Likert. Use-o como guia para acelerar seu desenvolvimento pessoal e profissional.

Lembre-se: o crescimento √© uma jornada cont√≠nua. Cada pequena a√ß√£o di√°ria faz a diferen√ßa!

Sucesso em sua jornada de desenvolvimento!

Equipe M√©todo Fa√ßa Bem
consultoria@openmanagement.com.br
        """
        
        msg.attach(MIMEText(corpo, 'plain', 'utf-8'))
        print(f"   ‚úÖ Corpo do e-mail anexado")
        
        # Anexar PDF
        with open(pdf_path, "rb") as attachment:
            part = MIMEBase('application', 'octet-stream')
            part.set_payload(attachment.read())
        
        encoders.encode_base64(part)
        part.add_header(
            'Content-Disposition',
            f'attachment; filename= relatorio_competencias_{nome.replace(" ", "_")}.pdf'
        )
        msg.attach(part)
        print(f"   ‚úÖ PDF anexado ao e-mail")
        
        # Conectar ao servidor SMTP
        print(f"   üîó Conectando ao servidor SMTP...")
        server = smtplib.SMTP(EMAIL_HOST, EMAIL_PORT)
        print(f"   ‚úÖ Conectado ao {EMAIL_HOST}:{EMAIL_PORT}")
        
        # Iniciar TLS
        print(f"   üîê Iniciando TLS...")
        server.starttls()
        print(f"   ‚úÖ TLS iniciado")
        
        # Fazer login
        print(f"   üîë Fazendo login como {EMAIL_USER}...")
        server.login(EMAIL_USER, EMAIL_PASS)
        print(f"   ‚úÖ Login realizado com sucesso")
        
        # Enviar email
        print(f"   üì§ Enviando e-mail...")
        text = msg.as_string()
        server.sendmail(EMAIL_USER, email_destino, text)
        print(f"   ‚úÖ E-mail enviado com sucesso!")
        
        # Fechar conex√£o
        server.quit()
        print(f"   ‚úÖ Conex√£o fechada")
        
        logger.info(f"Email enviado com sucesso para {email_destino}")
        print(f"üìß ‚úÖ SUCESSO: E-mail enviado para {email_destino}")
        
    except smtplib.SMTPAuthenticationError as e:
        error_msg = f"Erro de autentica√ß√£o SMTP: {str(e)}"
        print(f"   ‚ùå {error_msg}")
        print(f"   üí° Para Zoho Mail:")
        print(f"      1. Acesse: https://accounts.zoho.com/home#security/app-passwords")
        print(f"      2. Gere uma senha de app para 'Mail'")
        print(f"      3. Use essa senha no campo EMAIL_PASS")
        print(f"      4. Certifique-se que 2FA est√° ativado na conta")
        print(f"   üí° Para Gmail, use senha de app (n√£o a senha normal)")
        logger.error(error_msg)
        raise Exception(error_msg)
        
    except smtplib.SMTPConnectError as e:
        error_msg = f"Erro de conex√£o SMTP: {str(e)}"
        print(f"   ‚ùå {error_msg}")
        print(f"   üí° Verifique sua conex√£o com a internet")
        print(f"   üí° Verifique se o host {EMAIL_HOST} e porta {EMAIL_PORT} est√£o corretos")
        logger.error(error_msg)
        raise Exception(error_msg)
        
    except Exception as e:
        error_msg = f"Erro ao enviar email: {str(e)}"
        print(f"   ‚ùå {error_msg}")
        logger.error(error_msg)
        raise Exception(error_msg)
        
if __name__ == '__main__':
    # Verificar se wkhtmltopdf est√° dispon√≠vel
    if config is None:
        print("\n" + "="*60)
        print("‚ö†Ô∏è  AVISO: wkhtmltopdf n√£o encontrado!")
        print("üìÑ O site funcionar√°, mas PDFs n√£o ser√£o gerados.")
        print("üí° Para gerar PDFs, instale wkhtmltopdf:")
        print("   Windows: https://wkhtmltopdf.org/downloads.html")
        print("   Linux: sudo apt install wkhtmltopdf")
        print("   macOS: brew install wkhtmltopdf")
        print("="*60 + "\n")
    else:
        print("‚úÖ wkhtmltopdf configurado com sucesso!")
    
    print("üöÄ Iniciando servidor Flask...")
    print("üåê Acesse: http://localhost:5000")
    # Configura√ß√£o para produ√ß√£o
    port = int(os.environ.get('PORT', 5000))
    app.run(host='0.0.0.0', port=port, debug=False)

